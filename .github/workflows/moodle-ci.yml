name: Moodle Plugin CI

on: 
  push:
    paths:
      - '**/*.php'  # Ex√©cuter la CI uniquement si des fichiers PHP sont modifi√©s
  pull_request:
    paths:
      - '**/*.php'  # Ex√©cuter la CI uniquement si des fichiers PHP sont modifi√©s

jobs:
  test:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        php: ['8.0']
        moodle-branch: ['MOODLE_401_STABLE']
        database: [mariadb]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: V√©rifier si les conteneurs Moodle & MariaDB existent
        run: |
          echo "üîç V√©rification des conteneurs..."
          docker ps | grep "moodle" && echo "‚úÖ Moodle est actif." || { echo "‚ùå Moodle n'est pas actif !"; exit 1; }
          docker ps | grep "mariadb" && echo "‚úÖ MariaDB est actif." || { echo "‚ùå MariaDB n'est pas actif !"; exit 1; }

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          coverage: none
        

      - name: Cache PHP extensions
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-php-${{ matrix.php }}-extensions-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-extensions-

      - name: V√©rifier la version PHP install√©e
        run: |
          php -v
          # V√©rification si la version PHP est compatible avec php-cs-fixer
          if ! php -m | grep -q "json"; then
            echo "‚ö†Ô∏è La biblioth√®que JSON est manquante !"
            exit 1
          fi

      - name: Initialiser moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4
          echo "$(cd ci/bin; pwd)" >> $GITHUB_PATH
          echo "$(cd ci/vendor/bin; pwd)" >> $GITHUB_PATH
          sudo apt-get install -y locales
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Mettre √† jour les d√©pendances composer
        run: composer update --no-dev

      - name: Installer PHP-CS-Fixer
        run: |
          composer require --dev friendsofphp/php-cs-fixer:^2.0

      - name: V√©rifier les fichiers modifi√©s
        id: check_modified
        run: |
          echo "üîç V√©rification des fichiers modifi√©s..."
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          echo "Fichiers modifi√©s : $(cat changed_files.txt)"
          echo "::set-output name=files::$(cat changed_files.txt)"

      - name: Formater le code avec PHP-CS-Fixer (uniquement pour les fichiers modifi√©s)
        run: |
          CHANGED_FILES="${{ steps.check_modified.outputs.files }}"
          if echo "$CHANGED_FILES" | grep -qE '\.php$'; then
            echo "üìã Formatage des fichiers PHP modifi√©s..."
            vendor/bin/php-cs-fixer fix $CHANGED_FILES --rules=@Moodle --verbose
          else
            echo "Aucun fichier PHP modifi√©, saut du formatage."
          fi

      - name: Ex√©cuter PHPUnit Tests (uniquement pour les fichiers modifi√©s)
        if: ${{ steps.check_modified.outputs.files != '' }}
        run: |
          CHANGED_FILES="${{ steps.check_modified.outputs.files }}"
          if echo "$CHANGED_FILES" | grep -qE '\.php$'; then
            echo "üß™ Ex√©cution des tests PHPUnit pour les fichiers modifi√©s..."
            moodle-plugin-ci phpunit ./moodle/mod/studentqcm --fail-on-warning
          else
            echo "Aucun fichier PHP modifi√©, saut des tests PHPUnit."
          fi

      - name: Ex√©cuter Behat Features (Chrome)
        id: behat
        if: ${{ !cancelled() }}
        run: moodle-plugin-ci behat ./moodle/mod/studentqcm --profile chrome

      - name: Upload Behat Faildump en cas d'√©chec
        if: ${{ failure() && steps.behat.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: Behat Faildump (${{ join(matrix.*, ', ') }})
          path: ${{ github.workspace }}/moodledata/behat_dump
          retention-days: 7
          if-no-files-found: ignore

      - name: Mark cancelled jobs as failed
        if: ${{ cancelled() }}
        run: exit 1
